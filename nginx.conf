# Nginx 配置示例 - 用于反向代理语音实时转录服务

upstream asr_backend {
    # 后端服务地址
    server 127.0.0.1:9999;
    
    # 如果有多个实例，可以配置负载均衡
    # server 127.0.0.1:8001;
    # server 127.0.0.1:8002;
}

server {
    listen 80;
    server_name your-domain.com;  # 修改为您的域名
    
    # 客户端请求体大小限制
    client_max_body_size 10M;
    
    # 日志配置
    access_log /var/log/nginx/asr_access.log;
    error_log /var/log/nginx/asr_error.log;
    
    # WebSocket 代理配置（重点）
    location /ws/ {
        proxy_pass http://asr_backend;
        
        # WebSocket 必需的 HTTP/1.1 和 Upgrade 头
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # 转发客户端真实 IP
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 超时配置（根据需要调整）
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
        proxy_connect_timeout 75s;
        
        # 禁用缓冲，确保实时性
        proxy_buffering off;
    }
    
    # HTTP API 代理
    location / {
        proxy_pass http://asr_backend;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 超时配置
        proxy_read_timeout 60s;
        proxy_send_timeout 60s;
    }
}

# HTTPS 配置（推荐用于生产环境）
server {
    listen 443 ssl http2;
    server_name your-domain.com;  # 修改为您的域名
    
    # SSL 证书配置（使用 Let's Encrypt）
    ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
    
    # SSL 安全配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # 客户端请求体大小限制
    client_max_body_size 10M;
    
    # 日志配置
    access_log /var/log/nginx/asr_ssl_access.log;
    error_log /var/log/nginx/asr_ssl_error.log;
    
    # WebSocket 代理配置（WSS）
    location /ws/ {
        proxy_pass http://asr_backend;
        
        # WebSocket 必需配置
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # 转发客户端信息
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 超时配置
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
        proxy_connect_timeout 75s;
        
        # 禁用缓冲
        proxy_buffering off;
    }
    
    # HTTP API 代理
    location / {
        proxy_pass http://asr_backend;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_read_timeout 60s;
        proxy_send_timeout 60s;
    }
}

# HTTP 重定向到 HTTPS
server {
    listen 80;
    server_name your-domain.com;
    return 301 https://$server_name$request_uri;
}

